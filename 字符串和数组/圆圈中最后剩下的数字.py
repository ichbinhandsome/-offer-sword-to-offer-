'''
0,1,,n-1这n个数字排成一个圆圈，从数字0开始，每次从这个圆圈里删除第m个数字。求出这个圆圈里剩下的最后一个数字。

例如，0、1、2、3、4这5个数字组成一个圆圈，从数字0开始每次删除第3个数字，则删除的前4个数字依次是2、0、4、1，因此最后剩下的数字是3。

 

示例 1：

输入: n = 5, m = 3
输出: 3
示例 2：

输入: n = 10, m = 17
输出: 2

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
'''
class Solution:
    def lastRemaining(self, n: int, m: int) -> int:
        #约瑟夫环，重点是找到递推公式，从下到上递推
        #最后一个剩下的数字在当前数组中的索引必定为0
        #由此向上递推，得到最后一个剩下的数字在原数组中的索引，返回即可
        #递推公式 （ans+m）% i  ans:当前数组中最后剩下的那个数的索引 m:要删除的第几个数 i:前一个数组的长度  
        # 由此得到前一个数组中最后剩下的那个数的索引
        ans = 0
        for i in range(2,n+1):
            ans = (ans+m) % i
        return ans